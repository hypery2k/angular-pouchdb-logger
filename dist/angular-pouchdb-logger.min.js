/* angular-pouchdb-logger - Version 0.8.0, 22-02-2018
 * 
 * Enables logging to web database via pouchdb and $log delegate. The library is Ionic-aware and autoselect the best db for each platform
 * 
 * Copyright 2018  - Martin Reinhardt <contact@martinreinhardt-online.de>
 * License MIT
 */
!function(e,n){"use strict";var o=e.module("ngDbLogger.core",[]);function r(e,n,o,r){var t=e.rows[n].doc;if(o){if(o===t.level){try{t.arguments=JSON.parse(t.arguments)}catch(e){}r.push(t)}}else r.push(t);return t}o.constant("ngDbLoggerConfig",{dbName:"logDB",dbLogging:!0,info:!0,debug:!1,trace:!1}),o.factory("dbService",function(){var e;return function(o){return e||(e="undefined"!=typeof ionic&&"undefined"!=typeof cordova?function(e){try{return n.adapters["cordova-sqlite"]?new n(e,{adapter:"cordova-sqlite",size:50,location:"default"}):ionic.Platform.isAndroid()||ionic.Platform.isWindowsPhone()?new n(e,{adapter:"idb",size:50,location:"default"}):new n(e,{size:50,location:"default"})}catch(o){return new n(e,{adapter:"websql",size:50,location:"default"})}}(o):new n(o,{adapter:"websql"})),e}}),o.factory("dbLoggerService",["$q","$log","dbService",function(e,n,o){var t=n.getConfig(),i=function(n){var i=e.defer();return o(t.dbName).allDocs({include_docs:!0},function(e,o){!function(e,n,o,t){if(e)console.error("Error during writing log entries: "+n),o.reject(n);else{var i=[];for(var a in n.rows)({}).hasOwnProperty.call(n.rows,a)&&r(n,a,t,i);0===i.length&&(i=null),o.resolve(i)}}(e,o,i,n)}),i.promise};return{readLogData:function(e){return i(e)},clearLogData:function(){return n=e.defer(),o(t.dbName).destroy(function(e,o){e?(console.error("Error during clearing log database: "+o),n.reject(o)):(console.info("Sucessfully cleared log database."),n.resolve(o))}),n.promise;var n}}}]),o.provider("logger",function(){var e,o,r={};r.info=!0,r.debug=!1,r.outputOnly=!1,r.trace=!1,r.dbName="log",this.outputOnly=function(e){r.outputOnly=!!e},this.infoLogging=function(e){r.info=!!e},this.debugLogging=function(e){r.debug=!!e},this.traceLogging=function(e){r.trace=!!e},this.dbName=function(e){r.dbName=e};var t=function(n,t,i){var a=i[0];if(e||(e=n(r.dbName)),!r.outputOnly){var u=new Date,g={timestamp:u,level:t,details:""+a,arguments:JSON.stringify(i)};e&&e.bulkDocs&&(g._id=""+u.getTime(),e.put(g,function(e){e&&o.error("Error during writing log entry: "+e)}))}};this.$get=["$delegate","dbService","ngDbLoggerConfig",function(e,i,a){return r.dbName=a.dbName,r.outputOnly=!a.dbLogging,r.debug=a.debug,r.info=a.info,a.debug?(n.debug.enable("*"),n.debug.enable("pouchdb:find")):(n.debug.disable(),n.debug.disable("pouchdb:find")),r.trace=a.trace,o=e,{getConfig:function(){return r},log:function(){o.info(arguments),t(i,"INFO",arguments)},warn:function(){o.warn(arguments),t(i,"WARN",arguments)},info:function(){r.info&&(o.info(arguments),t(i,"INFO",arguments))},error:function(){o.error(arguments),t(i,"ERROR",arguments)},debug:function(){r.debug&&(o.debug(arguments),t(i,"DEBUG",arguments))},trace:function(){r.trace&&(o.trace(arguments),t(i,"TRACE",arguments))}}}]}),o.config(["$provide","loggerProvider","ngDbLoggerConfig",function(e,n,o){e.decorator("$log",["$delegate","dbService","ngDbLoggerConfig",function(e,o,r){return"function"==typeof n.$get?n.$get(e,o,r):n.$get[3](e,o,r)}])}])}(angular,PouchDB);