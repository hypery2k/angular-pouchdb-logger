/* angular-pouchdb-logger - Version 0.3.7, 12-12-2016
 * 
 * Enables logging to web database via pouchdb and $log delegate. The library is Ionic-aware and autoselect the best db for each platform
 * 
 * Copyright 2016  - Martin Reinhardt <contact@martinreinhardt-online.de>
 * License MIT
 */
!function(a,b){"use strict";function c(a,b,c,d){var e=a.rows[b].doc;return c?c===e.level&&d.push(e):d.push(e),e}function d(a,b,d,e){if(a)console.error("Error during writing log entries: "+b),d.reject(b);else{var f=[];for(var g in b.rows)({}).hasOwnProperty.call(b.rows,g)&&c(b,g,e,f);0===f.length&&(f=null),d.resolve(f)}}var e=a.module("ngDbLogger.core",[]);e.constant("ngDbLoggerConfig",{dbName:"logDB",dbLogging:!0,debug:!1,trace:!1}),e.factory("dbService",function(){var a;return function(c){return a||(a="undefined"!=typeof ionic&&"undefined"!=typeof cordova?ionic.Platform.isAndroid()||ionic.Platform.isWindowsPhone()?new b(c,{adapter:"idb",size:50,location:"default"}):new b(c,{adapter:"websql",size:50,location:"default"}):new b(c,{adapter:"websql"})),a}}),e.factory("dbLoggerService",["$q","$log","dbService",function(a,b,c){var e=b.getConfig(),f=function(b){var f=a.defer(),g=c(e.dbName);return g.allDocs({include_docs:!0},function(a,c){d(a,c,f,b)}),f.promise},g=function(){var b=a.defer(),d=c(e.dbName);return d.destroy(function(a,c){a?(console.error("Error during clearing log database: "+c),b.reject(c)):(console.info("Sucessfully cleared log database."),b.resolve(c))}),b.promise};return{readLogData:function(a){return f(a)},clearLogData:function(){return g()}}}]),e.provider("logger",function(){var a,c={};c.debug=!1,c.outputOnly=!1,c.trace=!1,c.dbName="log",this.outputOnly=function(a){c.outputOnly=!!a},this.debugLogging=function(a){c.debug=!!a},this.traceLogging=function(a){c.trace=!!a},this.dbName=function(a){c.dbName=a};var d=function(b,d,e){var f=e[0];if(!c.outputOnly){var g=new Date,h=b(c.dbName),i={timestamp:g,level:d,details:""+f,arguments:e};h&&h.bulkDocs&&(i._id=""+g.getTime(),h.put(i,function(b){b&&a.error("Error during writing log entry: "+b)}))}};this.$get=["$delegate","dbService","ngDbLoggerConfig",function(e,f,g){return c.dbName=g.dbName,c.outputOnly=!g.dbLogging,c.debug=g.debug,g.debug?(b.debug.enable("*"),b.debug.enable("pouchdb:find")):(b.debug.disable(),b.debug.disable("pouchdb:find")),c.trace=g.trace,a=e,{getConfig:function(){return c},log:function(){a.info(arguments),d(f,"INFO",arguments)},warn:function(){a.warn(arguments),d(f,"WARN",arguments)},info:function(){a.info(arguments),d(f,"INFO",arguments)},error:function(){a.error(arguments),d(f,"ERROR",arguments)},debug:function(){c.debug&&(a.debug(arguments),d(f,"DEBUG",arguments))},trace:function(){c.trace&&(a.trace(arguments),d(f,"TRACE",arguments))}}}]}),e.config(["$provide","loggerProvider","ngDbLoggerConfig",function(a,b,c){a.decorator("$log",["$delegate","dbService","ngDbLoggerConfig",function(a,c,d){return"function"==typeof b.$get?b.$get(a,c,d):b.$get[3](a,c,d)}])}])}(angular,PouchDB);