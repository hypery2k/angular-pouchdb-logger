/* angular-pouchdb-logger - Version 0.3.4, 17-07-2016
 * 
 * Enables logging to web database via pouchdb and $log delegate. The library is Ionic-aware and autoselect the best db for each platform
 * 
 * Copyright 2016  - Martin Reinhardt <contact@martinreinhardt-online.de>
 * License MIT
 */
!function(a){"use strict";function b(a,b,c,d){var e=a.rows[b].doc;return c?c===e.level&&d.push(e):d.push(e),e}function c(a,c,d,e){if(a)console.error("Error during writing log entries: "+c),d.reject(c);else{var f=[];for(var g in c.rows)({}).hasOwnProperty.call(c.rows,g)&&b(c,g,e,f);0===f.length&&(f=null),d.resolve(f)}}var d=a.module("ngDbLogger.core",[]);d.constant("ngDbLoggerConfig",{dbName:"logDB",dbLogging:!0,debug:!1,trace:!1}),d.factory("dbService",function(){var a;return function(b){return a||(a="undefined"!=typeof ionic&&"undefined"!=typeof cordova?ionic.Platform.isAndroid()||ionic.Platform.isWindowsPhone()?new PouchDB(b,{adapter:"idb",size:50,location:"default"}):new PouchDB(b,{adapter:"websql",size:50,location:"default"}):new PouchDB(b,{adapter:"websql"})),a}}),d.factory("dbLoggerService",["$q","$log","dbService",function(a,b,d){var e=b.getConfig(),f=function(b){var f=a.defer(),g=d(e.dbName);return g.allDocs({include_docs:!0},function(a,d){c(a,d,f,b)}),f.promise},g=function(){var b=a.defer(),c=d(e.dbName);return c.destroy(function(a,c){a?(console.error("Error during clearing log database: "+c),b.reject(c)):(console.info("Sucessfully cleared log database."),b.resolve(c))}),b.promise};return{readLogData:function(a){return f(a)},clearLogData:function(){return g()}}}]),d.provider("logger",function(){var a,b={};b.debug=!1,b.outputOnly=!1,b.trace=!1,b.dbName="log",this.outputOnly=function(a){b.outputOnly=!!a},this.debugLogging=function(a){b.debug=!!a},this.traceLogging=function(a){b.trace=!!a},this.dbName=function(a){b.dbName=a};var c=function(c,d,e){var f=e[0];if(!b.outputOnly){var g=new Date,h=c(b.dbName),i={timestamp:g,level:d,details:""+f};h&&h.bulkDocs&&(i._id=""+g.getTime(),h.put(i,function(b){b&&a.error("Error during writing log entry: "+b)}))}};this.$get=["$delegate","dbService","ngDbLoggerConfig",function(d,e,f){return b.dbName=f.dbName,b.outputOnly=!f.dbLogging,b.debug=f.debug,f.debug?(PouchDB.debug.enable("*"),PouchDB.debug.enable("pouchdb:find")):(PouchDB.debug.disable(),PouchDB.debug.disable("pouchdb:find")),b.trace=f.trace,a=d,{getConfig:function(){return b},log:function(){a.info(arguments),c(e,"INFO",arguments)},warn:function(){a.warn(arguments),c(e,"WARN",arguments)},info:function(){a.info(arguments),c(e,"INFO",arguments)},error:function(){a.error(arguments),c(e,"ERROR",arguments)},debug:function(){b.debug&&(a.debug(arguments),c(e,"DEBUG",arguments))},trace:function(){b.trace&&(a.trace(arguments),c(e,"TRACE",arguments))}}}]}),d.config(["$provide","loggerProvider","ngDbLoggerConfig",function(a,b,c){a.decorator("$log",["$delegate","dbService","ngDbLoggerConfig",function(a,c,d){return"function"==typeof b.$get?b.$get(a,c,d):b.$get[3](a,c,d)}])}])}(angular);